[{"path":"https://anguswg-ucsb.github.io/fetchr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 fetchr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Angus Watters. Author, maintainer.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Watters (2022). fetchr: fetchr. R package version 0.0.0.9000, https://anguswg-ucsb.github.io/fetchr/.","code":"@Manual{,   title = {fetchr: fetchr},   author = {Angus Watters},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://anguswg-ucsb.github.io/fetchr/}, }"},{"path":"https://anguswg-ucsb.github.io/fetchr/index.html","id":"fetchr-","dir":"","previous_headings":"","what":"fetchr","title":"fetchr","text":"« Fetch » goal fetchr provide fast efficient raster based method calculating fetch lengths across thousands water grid cells. Calculating fetch lengths, distance wind can blow constant direction body water without interruption, can slow memory intensive process done thousands points interest multiple directions. fetchr attempts fix problem allows thousands fetch calculations performed fraction time methods take.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"fetchr","text":"can install development version fetchr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"anguswg-ucsb/fetchr\")"},{"path":"https://anguswg-ucsb.github.io/fetchr/index.html","id":"coastline-raster","dir":"","previous_headings":"","what":"Coastline raster","title":"fetchr","text":"start raster representing Southern California coast near Santa Barbara, CA.","code":"library(fetchr)  # land raster land_rast <- terra::rast(fetchr::land)  terra::plot(land_rast, col = \"#2e8b57\")"},{"path":"https://anguswg-ucsb.github.io/fetchr/index.html","id":"make-a-binary-land-water-rasters","dir":"","previous_headings":"","what":"Make a binary land water rasters","title":"fetchr","text":"can take land raster, indicate cells water cells, create binary land water raster (land = 0, water = 1).  raster now meets specification using get_fetch(): Binary cell values (land cells = 0 water cells = 1) Projected Coordinate Reference System Regular grid cell size (x y cell resolution)","code":"# binary land water raster  landwater <- fetchr::get_landwater(   r           = land_rast,                 # land raster   water_value = NA,                        # cells with a value of NA are classified as water, all other cells are land   res         = terra::res(land_rast)[1]   # return raster with the same cell resolution as input raster   ) #> SpatRaster provided...  terra::plot(landwater, col = c(\"#2e8b57\", \"#add8e6\"))"},{"path":"https://anguswg-ucsb.github.io/fetchr/index.html","id":"calculate-fetch-length","dir":"","previous_headings":"","what":"Calculate fetch length","title":"fetchr","text":"Now let’s calculate fetch length raster  example , calculating fetch distances > 24,000 water cells took ~20 seconds, ~0.00083 seconds per point. ~ 99.92% reduction computation time compared various polygon based methods !","code":"system.time(      fetch <- fetchr::get_fetch(     r        = landwater,     # binary land water raster     max_dist = 200000,        # maximum distance to calculate fetch in meters (200km)     ncores   = 12,            # number of computer cores to use      verbose  = TRUE     )    ) #> Calculating Fetch... #> Calculating North/South/East/West distances #> Calculating diagonal distances #>    user  system elapsed  #>    4.80    0.15   20.85  plot(fetch)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/cell_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate distances by cell counts — cell_dist","title":"Calculate distances by cell counts — cell_dist","text":"Calculate distances cell counts","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/cell_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate distances by cell counts — cell_dist","text":"","code":"cell_dist(   indices_df,   cell_res = 2000,   max_dist = 1e+05,   func = \"mean\",   na_remove = TRUE,   verbose = FALSE )"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/cell_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate distances by cell counts — cell_dist","text":"indices_df dataframe indices cell_res numeric cell resolution. Default 2000. max_dist numeric max distance calculate fetch distance. Default 100000 (100km). func character R function apply distances cell. Either mean, min, max, sum. na_remove logical. argument passed na.rm = R func. Default TRUE, remove NAs verbose logical, print messages. Default FALSE","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/cell_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate distances by cell counts — cell_dist","text":"dataframe summarized cell distances","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Check boundaries of matrix column — check_cols","title":"Check boundaries of matrix column — check_cols","text":"Check boundaries matrix column","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check boundaries of matrix column — check_cols","text":"","code":"check_cols(m, row_index, col_index)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check boundaries of matrix column — check_cols","text":"m matrix interest row_index numeric row index col_index numeric col index","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check boundaries of matrix column — check_cols","text":"list cell indexes","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Check length of consecutive non-zero cells in vector — check_length","title":"Check length of consecutive non-zero cells in vector — check_length","text":"Check length consecutive non-zero cells vector","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check length of consecutive non-zero cells in vector — check_length","text":"","code":"check_length(vect, max_count, verbose = FALSE)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check length of consecutive non-zero cells in vector — check_length","text":"vect numeric vector 1s 0s (can include NAs) max_count numeric, indicating max number pixels count within maximum distance verbose logical, whether messages printed. Default FALSE, messages print.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check length of consecutive non-zero cells in vector — check_length","text":"Count consecutive non-zero cells matrix cell, extending given direction","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Check boundaries of matrix row — check_rows","title":"Check boundaries of matrix row — check_rows","text":"Check boundaries matrix row","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check boundaries of matrix row — check_rows","text":"","code":"check_rows(m, row_index, col_index)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check boundaries of matrix row — check_rows","text":"m matrix interest row_index numeric row index col_index numeric col index","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check boundaries of matrix row — check_rows","text":"list cell indexes","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_zeros.html","id":null,"dir":"Reference","previous_headings":"","what":"Check run length encoding output for cell run of zeros — check_zeros","title":"Check run length encoding output for cell run of zeros — check_zeros","text":"Check run length encoding output cell run zeros","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_zeros.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check run length encoding output for cell run of zeros — check_zeros","text":"","code":"check_zeros(rle_vect, verbose = FALSE)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_zeros.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check run length encoding output for cell run of zeros — check_zeros","text":"rle_vect rle object verbose logical, whether messages printed. Default FALSE, messages print.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/check_zeros.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check run length encoding output for cell run of zeros — check_zeros","text":"Count consecutive non-zero cells matrix cell, extending given direction","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/diag_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve length of any diagonal direction for a specific matrix cell — diag_dist","title":"Retrieve length of any diagonal direction for a specific matrix cell — diag_dist","text":"Given matrix row column number cell interest, return number consecutive non-zero values","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/diag_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve length of any diagonal direction for a specific matrix cell — diag_dist","text":"","code":"diag_dist(m, row_index = NULL, col_index = NULL, max_count, verbose = FALSE)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/diag_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve length of any diagonal direction for a specific matrix cell — diag_dist","text":"m matrix interest row_index numeric row number matrix cell get indices diagonals col_index numeric column number matrix cell get indices diagonals max_count numeric, maximum number cells within max_dist verbose logical. Whether messages output console. Default FALSE, messages output.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/diag_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve length of any diagonal direction for a specific matrix cell — diag_dist","text":"integer diagonal cell counts matrix diagonal cell counts","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/diag_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize lengths of sequential raster cells diagonals — diag_summary","title":"Summarize lengths of sequential raster cells diagonals — diag_summary","text":"Internal function calculating distance along diagonals specified indices matrix.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/diag_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize lengths of sequential raster cells diagonals — diag_summary","text":"","code":"diag_summary(   m,   indices_df,   func = \"mean\",   max_count,   ncores = 2,   verbose = FALSE )"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/diag_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize lengths of sequential raster cells diagonals — diag_summary","text":"m matrix interest indices_df dataframe matrix indices calculate lengths func character R function summarize surrounding vertical/horizontal pixels. One \"mean\", \"min\", \"max\", \"sum\". Default \"mean\" max_count numeric, maximum cell count. Equal maximum distance/cell resolution ncores numeric, number cores use parallel processing. Default 2. verbose logical, whether print messages . Default FALSE.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/diag_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize lengths of sequential raster cells diagonals — diag_summary","text":"list numeric vectors diagonal distances","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a raster of mean fetch lengths from a binary land-water raster. — get_fetch","title":"Generate a raster of mean fetch lengths from a binary land-water raster. — get_fetch","text":"Given binary land water raster, function calculate mean distance water cell away land. fetch distance mean distance given water cell next land cell 8 directions (horizontally, vertically, diagonally). Returns raster CRS, resolution, extent input land water raster.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a raster of mean fetch lengths from a binary land-water raster. — get_fetch","text":"","code":"get_fetch(r = NULL, max_dist = 1e+05, ncores = 2, verbose = TRUE)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a raster of mean fetch lengths from a binary land-water raster. — get_fetch","text":"r SpatRaster, RasterLayer file path (character) binary land type raster TIF. Land water values . max_dist numeric maximum distance (meters) calculate fetch values . Default 100000m (100km) ncores numeric indicating many cores use parallel processing. Default 2. verbose logical, whether messages printed. Default FALSE, messages print.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a raster of mean fetch lengths from a binary land-water raster. — get_fetch","text":"SpatRaster mean fetch distance land calculated every water pixel.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_land.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a land raster from binary land type raster — get_land","title":"Make a land raster from binary land type raster — get_land","text":"returns SpatRaster land cells. Land cells value 2 default, cells NA. Fits HSI raster specifications.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a land raster from binary land type raster — get_land","text":"","code":"get_land(r, land_value = 0, out_value = 2, as_polygon = FALSE, as_sf = FALSE)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_land.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a land raster from binary land type raster — get_land","text":"r SpatRast binary land type raster. Land water values . land_value numeric indicating value land represented raster. Default 0 conform get_landwater() output out_value numeric indicating value land represented output raster. Default 2 as_polygon logical, polygon returned instead raster. Default FALSE, returns terra rast object as_sf logical, polygon returned SF object. Default FALSE, returns terra vect object","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_land.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a land raster from binary land type raster — get_land","text":"SpatRaster land cells value, cells NA","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_landwater.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a binary land water raster from multiple land types raster. — get_landwater","title":"Make a binary land water raster from multiple land types raster. — get_landwater","text":"returns binary land water raster land cells set 1 water cells set 0. water value specified indicate pixel value represent water final raster. rest pixels indicate land cells.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_landwater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a binary land water raster from multiple land types raster. — get_landwater","text":"","code":"get_landwater(r, water_value = NA, res = 2000, verbose = TRUE)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_landwater.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a binary land water raster from multiple land types raster. — get_landwater","text":"r SpatRaster, RasterLayer, SpatVect filepath (character) raster data. Data must projected CRS. water_value numeric, value water cells input raster. Default NA. res numeric resolution template raster. Default 2000, generates raster grid cell resolution 2000x2000. verbose logical, whether messages printed. Default TRUE, messages print.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_landwater.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a binary land water raster from multiple land types raster. — get_landwater","text":"SpatRaster, binary land water raster land cells set 1 water cells set 0.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_water.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a water raster from binary land type raster — get_water","title":"Make a water raster from binary land type raster — get_water","text":"returns SpatRaster water cells. Water cells value 1 default, cells NA. Fits HSI raster specifications.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_water.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a water raster from binary land type raster — get_water","text":"","code":"get_water(r, water_value = 1, out_value = 1, as_polygon = FALSE, as_sf = FALSE)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_water.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a water raster from binary land type raster — get_water","text":"r SpatRast binary land type raster. Land water values . water_value numeric indicating value water represented raster. Default 1 conform get_landwater() output out_value numeric indicating value land represented output raster. Default 1 as_polygon logical, polygon returned instead raster. Default FALSE, returns terra rast object as_sf logical, polygon returned SF object. Default FALSE, returns terra vect object","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_water.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a water raster from binary land type raster — get_water","text":"SpatRaster land cells value, cells NA","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land.html","id":null,"dir":"Reference","previous_headings":"","what":"Land raster — land","title":"Land raster — land","text":"Example land raster. Values 1 indicate land values NA. Implied NA values water cells","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Land raster — land","text":"","code":"land"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Land raster — land","text":"object class RasterLayer dimension 189 x 183 x 1.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Land raster — land","text":"","code":"if (FALSE) {  fetchr::land }"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land_vect.html","id":null,"dir":"Reference","previous_headings":"","what":"Land vector polygon — land_vect","title":"Land vector polygon — land_vect","text":"Example land vector polygon","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land_vect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Land vector polygon — land_vect","text":"","code":"land_vect"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land_vect.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Land vector polygon — land_vect","text":"object class sf (inherits data.frame) 1 rows 2 columns.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land_vect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Land vector polygon — land_vect","text":"","code":"if (FALSE) {  fetchr::land_vect }"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/landwater.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary landwater raster — landwater","title":"Binary landwater raster — landwater","text":"Example binary landwater raster. Values 1 indicate land values 0 indicate water.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/landwater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary landwater raster — landwater","text":"","code":"landwater"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/landwater.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Binary landwater raster — landwater","text":"object class RasterLayer dimension 189 x 183 x 1.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/landwater.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary landwater raster — landwater","text":"","code":"if (FALSE) {  fetchr::landwater }"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/make_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create grid template — make_grid","title":"Create grid template — make_grid","text":"returns template SpatRaster. cell values 1 template raster actually \"empty","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/make_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create grid template — make_grid","text":"","code":"make_grid(r, res = 2000)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/make_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create grid template — make_grid","text":"r SpatRaster, SpatVector SF object Projected Coordinate System CRS. res numeric resolution template raster. Default 2000, generates template raster grid cell resolution 2000x2000.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/make_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create grid template — make_grid","text":"SpatRaster template grid","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/side_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of consequetive cells around a matrix cell to the up/down/left/right of a matrix cell — side_count","title":"Count number of consequetive cells around a matrix cell to the up/down/left/right of a matrix cell — side_count","text":"Count number consequetive cells around matrix cell //left/right matrix cell","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/side_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of consequetive cells around a matrix cell to the up/down/left/right of a matrix cell — side_count","text":"","code":"side_count(   m,   row_index = NULL,   col_index = NULL,   cell_res = 2000,   max_dist = 1e+05,   func = \"mean\",   as_df = FALSE,   verbose = FALSE )"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/side_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of consequetive cells around a matrix cell to the up/down/left/right of a matrix cell — side_count","text":"m matrix interest row_index numeric row number matrix cell calculate cell count going //left/right specified cell col_index numeric column number matrix cell calculate cell count going //left/right specified cell cell_res numeric cell resolution. Default 2000. max_dist numeric maximum distance calculate fetch . Default 100000m (100km). func character. R function, either, mean, min, max, sum. Default mean calculates mean number cells around cell as_df logical. whether return dataframe . Default FALSE, returns numeric vector mean cell count around cell. verbose logical, whether print messages console. Default FALSE, messages print","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/side_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of consequetive cells around a matrix cell to the up/down/left/right of a matrix cell — side_count","text":"numeric indicating average cell count directions dataframe consequetive cell counts (non-zero cells) //left/right specified cell matrix","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/side_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize lengths of sequential raster cells horizontalally and vertically — side_summary","title":"Summarize lengths of sequential raster cells horizontalally and vertically — side_summary","text":"Internal function calculating distances horizonatlly vertically specified indices matrix.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/side_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize lengths of sequential raster cells horizontalally and vertically — side_summary","text":"","code":"side_summary(   m,   indices_df,   cell_res = 2000,   max_dist = 1e+05,   func = \"mean\",   ncores = 2,   verbose = FALSE )"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/side_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize lengths of sequential raster cells horizontalally and vertically — side_summary","text":"m matrix interest indices_df dataframe matrix indices calculate lengths cell_res numeric, resolution raster cells. Default 2000 max_dist numeric, maximum distance calculate fetch . meters. Default 20000m func character R function summarize surrounding vertical/horizontal pixels. One \"mean\", \"min\", \"max\", \"sum\". Default \"mean\" ncores numeric, number cores use parallel processing. Default 2. verbose logical, whether print messages . Default FALSE.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/side_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize lengths of sequential raster cells horizontalally and vertically — side_summary","text":"returns list summarized side lengths every water cell, length number rows input indices_df dataframe","code":""}]
