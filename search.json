[{"path":"https://anguswg-ucsb.github.io/fetchr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 fetchr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Angus Watters. Author, maintainer.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Watters (2023). fetchr: fetchr: Calculate Fetch Distances Geospatial Data. https://anguswg-ucsb.github.io/fetchr/, https://anguswg-ucsb.github.io/fetchr/.","code":"@Manual{,   title = {fetchr: fetchr: Calculate Fetch Distances for Geospatial Data},   author = {Angus Watters},   year = {2023},   note = {https://anguswg-ucsb.github.io/fetchr/, https://anguswg-ucsb.github.io/fetchr/}, }"},{"path":"https://anguswg-ucsb.github.io/fetchr/index.html","id":"fetchr-","dir":"","previous_headings":"","what":"fetchr: Calculate Fetch Distances for Geospatial Data","title":"fetchr: Calculate Fetch Distances for Geospatial Data","text":"« Fetch » goal fetchr provide fast efficient raster based method calculating fetch lengths across thousands water grid cells. Calculating fetch lengths, distance wind can blow constant direction body water without interruption, can slow memory intensive process done thousands points interest multiple directions. fetchr attempts fix problem allows thousands fetch calculations performed fraction time methods take.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"fetchr: Calculate Fetch Distances for Geospatial Data","text":"can install development version fetchr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"anguswg-ucsb/fetchr\")"},{"path":"https://anguswg-ucsb.github.io/fetchr/index.html","id":"coastline-raster","dir":"","previous_headings":"","what":"Coastline raster","title":"fetchr: Calculate Fetch Distances for Geospatial Data","text":"start raster representing Southern California coast near Santa Barbara, CA.","code":"library(fetchr)  # land raster land_rast <- terra::rast(fetchr::land)  terra::plot(land_rast, col = \"#2e8b57\")"},{"path":"https://anguswg-ucsb.github.io/fetchr/index.html","id":"make-a-binary-land-water-rasters","dir":"","previous_headings":"","what":"Make a binary land water rasters","title":"fetchr: Calculate Fetch Distances for Geospatial Data","text":"can take land raster, indicate cells water cells, create binary land water raster (land = 0, water = 1).  raster now meets specification using get_fetch(): Binary cell values (land cells = 0 water cells = 1) Projected Coordinate Reference System Regular grid cell size (x y cell resolution)","code":"# binary land water raster  landwater <- fetchr::get_landwater(   r           = land_rast,                 # land raster   water_value = NA,                        # cells with a value of NA are classified as water, all other cells are land   res         = terra::res(land_rast)[1]   # return raster with the same cell resolution as input raster   ) #> Creating landwater raster...  terra::plot(landwater, col = c(\"#2e8b57\", \"#add8e6\"))"},{"path":"https://anguswg-ucsb.github.io/fetchr/index.html","id":"calculate-fetch-length","dir":"","previous_headings":"","what":"Calculate fetch length","title":"fetchr: Calculate Fetch Distances for Geospatial Data","text":"Internally, get_fetch() coerce polygon/multipolygon geometries rasters required binary landwater raster. recommended provide either sf/terra polygon raster/terra raster single value land cells NA values water cells. calculate fetch distances, can simply provide sf/terra polygon raster/terra raster get_fetch()  example , machine calculated fetch distances > 24,000 water cells ~3 seconds, ~0.00014 seconds per point. ~99.99% reduction computation time compared various polygon based methods !","code":"system.time(      fetch <- fetchr::get_fetch(     r           = land_rast,     # binary land water raster     max_dist    = 200000,        # maximum distance to calculate fetch in meters (200km)     in_parallel = TRUE,          # run calculations in parallel     verbose     = TRUE     )    ) #> Calculating Fetch... #>    user  system elapsed  #>   0.037   0.012  12.351  plot(fetch)"},{"path":"https://anguswg-ucsb.github.io/fetchr/index.html","id":"multidirectional-fetch-calculations","dir":"","previous_headings":"","what":"Multidirectional fetch calculations","title":"fetchr: Calculate Fetch Distances for Geospatial Data","text":"get_fetch_directions() function allows get get individual fetch distances 8 directions:","code":"multi_fetch <- fetchr::get_fetch_directions(   r           = land_rast,     # binary land water raster   max_dist    = 200000,        # maximum distance to calculate fetch in meters (200km)   in_parallel = TRUE,          # run calculations in parallel   verbose     = TRUE   ) #> Calculating Fetch...  plot(multi_fetch)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate wind fetch distances from spatial objects — get_fetch","title":"Calculate wind fetch distances from spatial objects — get_fetch","text":"function calculate mean, maximum, minimum, total fetch distance 8 directions (horizontally, vertically, diagonally). provided raster data, default behavior treat NA cells water cells non NA cells land. want specify different value water cells, use water_value argument specify grid cells represent water. sf/terra polygon provided, cell resolution must provided specify desired resolution output raster. Returns binary landwater SpatRaster land values 0 water values 1.Returns raster CRS, resolution, extent input raster vector.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate wind fetch distances from spatial objects — get_fetch","text":"","code":"get_fetch(   r = NULL,   max_dist = 1e+05,   res = 2000,   water_value = NA,   func = \"mean\",   in_parallel = TRUE,   verbose = TRUE )"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate wind fetch distances from spatial objects — get_fetch","text":"r terra SpatRaster, raster RasterLayer, sf POLYGON/MULTIPOLYGON geometry, terra SpatVector POLYGON/MULTIPOLYGON geometry, character filepath pointing .shp, .gpkg, .geojson, .tif file representing land water. Provide SpatRaster RasterLayer binary landwater raster land values 0 water values 1. max_dist numeric, maximum distance (meters) calculate fetch values . Default 100,000m (100km) res numeric, specifying desired resolution output raster providing polygon. polygon given, polygon must rasterized specific resolution. argument ignored raster/terra raster given. Default 2000, rasterize polygons onto grid grid cell resolution 2000 x 2000. water_value numeric, value indicating value water cells within input raster. sf/terra polygon given, argument ignored. Default NA, NA cells treated water cells cells land cells. func character R function apply distances cell. Either mean, min, max, sum. in_parallel logical whether calculations done using parallel workers. TRUE, (default), processes run parallel. verbose logical, whether messages printed. Default FALSE, messages print.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate wind fetch distances from spatial objects — get_fetch","text":"SpatRaster mean, max, min, total wind fetch distances land calculated every water pixel.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate wind fetch distances from spatial objects — get_fetch","text":"","code":"if (FALSE) { # mean fetch distance using a binary raster RasterLayer as the input mean_fetch <- fetchr::get_fetch( r      = fetchr::landwater ) # plot mean fetch plot(mean_fetch)  # maximum fetch distance using a binary raster RasterLayer as the input max_fetch <- fetchr::get_fetch( r      = fetchr::landwater, func   = \"max\" )  # plot max fetch plot(max_fetch)  # minimum fetch distance using a binary raster RasterLayer as the input  min_fetch <- fetchr::get_fetch( r      = fetchr::landwater, func   = \"min\" )  # plot min fetch  plot(min_fetch)  # mean fetch distance using a sf MULTIPOLYGON object as the input fetch_poly <- fetchr::get_fetch( r = fetchr::land_vect ) # plot mean fetch from a polygon object plot(fetch_poly)  # increase the maximum distance to calculate fetch lengths out to 200km increase_max_dist <- fetchr::get_fetch( r           = fetchr::landwater, max_dist    = 200000, in_parallel = TRUE                 # Run in parallel )  # plot mean fetch going out 200km plot(increase_max_dist) }"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch_directions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate wind fetch distances in 8 directions from spatial objects — get_fetch_directions","title":"Calculate wind fetch distances in 8 directions from spatial objects — get_fetch_directions","text":"function calculate fetch values 8 directions (horizontally, vertically, diagonally). function create 8 layer SpatRaster raster layer north, south, east, west, northeast, southeast, southwest, northwest fetch values. provided raster data, default behavior treat NA cells water cells non NA cells land. want specify different value water cells, use water_value argument specify grid cells represent water. sf/terra polygon provided, cell resolution must provided specify desired resolution output raster. Returns binary landwater SpatRaster land values 0 water values 1.Returns raster CRS, resolution, extent input raster vector.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch_directions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate wind fetch distances in 8 directions from spatial objects — get_fetch_directions","text":"","code":"get_fetch_directions(   r = NULL,   max_dist = 1e+05,   res = 2000,   water_value = NA,   in_parallel = TRUE,   verbose = TRUE )"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch_directions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate wind fetch distances in 8 directions from spatial objects — get_fetch_directions","text":"r terra SpatRaster, raster RasterLayer, sf POLYGON/MULTIPOLYGON geometry, terra SpatVector POLYGON/MULTIPOLYGON geometry, character filepath pointing .shp, .gpkg, .geojson, .tif file representing land water. Provide SpatRaster RasterLayer binary landwater raster land values 0 water values 1. max_dist numeric, maximum distance (meters) calculate fetch values . Default 100,000m (100km) res numeric, specifying desired resolution output raster providing polygon. polygon given, polygon must rasterized specific resolution. argument ignored raster/terra raster given. Default 2000, rasterize polygons onto grid grid cell resolution 2000 x 2000. water_value numeric, value indicating value water cells within input raster. sf/terra polygon given, argument ignored. Default NA, NA cells treated water cells cells land cells. in_parallel logical whether calculations done using parallel workers. TRUE, (default), processes run parallel. verbose logical, whether messages printed. Default FALSE, messages print.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch_directions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate wind fetch distances in 8 directions from spatial objects — get_fetch_directions","text":"SpatRaster mean, max, min, total wind fetch distances land calculated every water pixel.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_fetch_directions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate wind fetch distances in 8 directions from spatial objects — get_fetch_directions","text":"","code":"if (FALSE) { # calculate 8 fetch directions using a binary raster RasterLayer as the input fetch_dirs <- fetchr::get_fetch_directions( r      = fetchr::landwater ) # plot 8 fetch directions fetch plot(fetch_dirs) # calculate 8 fetch directions using a sf MULTIPOLYGON object as the input fetch_poly <- fetchr::get_fetch_directions( r = fetchr::land_vect ) # plot mean fetch from a polygon object plot(fetch_poly) }"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_landwater.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a spatial object for fetch calculations — get_landwater","title":"Prepare a spatial object for fetch calculations — get_landwater","text":"Provides method preprocessing sf/terra polygons raster/terra rasters calculating fetch using get_fetch(). provided raster data, default behavior treat NA cells water cells non NA cells land. want specify different value water cells, use water_value argument specify grid cells represent water. Returns binary landwater SpatRaster land values 0 water values 1. water value specified indicate pixel value represent water final raster. rest pixels indicate land cells.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_landwater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a spatial object for fetch calculations — get_landwater","text":"","code":"get_landwater(r, water_value = NA, res = 2000, verbose = TRUE)"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_landwater.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a spatial object for fetch calculations — get_landwater","text":"r sf POLYGON/MULTIPOLYGON, terra SpatVect POLYGON, SpatRaster, RasterLayer, file path (character) vector/raster data file. Data must projected CRS. water_value numeric, value indicating value water cells within input raster. sf/terra polygon given, argument ignored. Default NA, NA cells treated water cells cells land cells. res numeric resolution template raster. polygon given, polygon must rasterized specific resolution. argument ignored raster/terra raster given. Default 2000, rasterize polygons onto grid grid cell resolution 2000 x 2000. verbose logical, whether messages printed. Default TRUE, messages print.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_landwater.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a spatial object for fetch calculations — get_landwater","text":"SpatRaster, binary landwater raster land values 0 water values 1","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/get_landwater.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare a spatial object for fetch calculations — get_landwater","text":"","code":"if (FALSE) { # Create a binary landwater SpatRaster from a sf polygon at a 2000m x 2000m resolution lw <- fetchr::get_landwater(                 r   = fetchr::land_vect,                 res = 2000                 ) }"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land.html","id":null,"dir":"Reference","previous_headings":"","what":"Land raster — land","title":"Land raster — land","text":"Example land raster. Values 0 indicate land values NA. Implied NA values water cells","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Land raster — land","text":"","code":"land"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Land raster — land","text":"object class PackedSpatRaster length 1.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Land raster — land","text":"","code":"if (FALSE) {  fetchr::land }"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land_vect.html","id":null,"dir":"Reference","previous_headings":"","what":"Land vector polygon — land_vect","title":"Land vector polygon — land_vect","text":"Example land vector polygon","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land_vect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Land vector polygon — land_vect","text":"","code":"land_vect"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land_vect.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Land vector polygon — land_vect","text":"object class PackedSpatVector length 1.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/land_vect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Land vector polygon — land_vect","text":"","code":"if (FALSE) {  fetchr::land_vect }"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/landwater.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary landwater raster — landwater","title":"Binary landwater raster — landwater","text":"Example binary landwater raster. Values 0 indicate land values 1 indicate water.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/landwater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary landwater raster — landwater","text":"","code":"landwater"},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/landwater.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Binary landwater raster — landwater","text":"object class PackedSpatRaster length 1.","code":""},{"path":"https://anguswg-ucsb.github.io/fetchr/reference/landwater.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary landwater raster — landwater","text":"","code":"if (FALSE) {  fetchr::landwater }"},{"path":"https://anguswg-ucsb.github.io/fetchr/news/index.html","id":"version-11100","dir":"Changelog","previous_headings":"","what":"version 1.1.1.00","title":"version 1.1.1.00","text":"big improvements speed efficiency get_fetch providing func = inputs “mean”, “min”, “max”, “sum” raises error telling user use one 4 functions ncores argument replaced in_parallel logical TRUE, run calculations parallel using number cores machine - 1. number cores determined parallel::detectCores() function Added get_fetch_directions function generate 8 layer SpatRaster layer wind fetch raster one 8 cardinal directions (north, south, east, west, northeast, northwest, southeast, southwest)","code":""}]
